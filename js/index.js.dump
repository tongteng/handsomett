$( document ).ready(function() {  
    // Set canvas drawing surface
    var space = document.getElementById("surface");
    var surface = space.getContext("2d");
    surface.scale(1,1);

    // Set Particles
    var particles = [];
    var particle_count = 130;
    for(var i = 0; i < particle_count; i++) {
	    particles.push(new particle());
    }
    var time = 0;
    // Set wrapper and canvas items size
    var canvasWidth=320;
    var canvasHeight=480;
    $(".wrapper").css({width:canvasWidth,height:canvasHeight});
    $("#surface").css({width:canvasWidth,height:canvasHeight});

    // shim layer with setTimeout fallback from Paul Irish
    window.requestAnimFrame = (function(){
        return  window.requestAnimationFrame ||
            window.webkitRequestAnimationFrame ||
            window.mozRequestAnimationFrame    ||
        function( callback ){
            window.setTimeout(callback, 6000 / 60);
        };
    })();

    function particle() {     
    
        // x脰谩禄冒脩忙脦垄脨隆虏篓露炉,y脰谩禄冒脩忙脧貌脡脧(Y脰谩碌脛脳酶卤锚陆芦脭陆脌麓脭陆脨隆)
        this.speed = {x: -1+Math.random()*2, y: -5+Math.random()*5};

        canvasWidth = (document.getElementById("surface").width);
        canvasHeight= (document.getElementById("surface").height);

        // 戮枚露篓禄冒脩忙碌脛(脛脷脩忙)碌脛脦禄脰脙碌茫
        this.location = {x: canvasWidth/2, y: (canvasHeight/2)+35};

        // 禄冒脩忙碌茫碌脛掳毛戮露
        this.radius = .5+Math.random()*1;

        // 脙驴脪禄赂枚禄冒脩忙碌脛脡煤脙眉脰脺脝脷
        this.life = 10+Math.random()*10;
        this.death = this.life;

        // 
        this.r = 255;
        this.g = Math.round(Math.random()*155);
        this.b = 0;
    }
  
    function ParticleAnimation(){
        surface.globalCompositeOperation = "source-over";
        surface.fillStyle = "black";
        surface.fillRect(0, 0, canvasWidth, canvasHeight);
        surface.globalCompositeOperation = "lighter";
		
        for(var i = 0; i < particles.length; i++)
        {
	        var p = particles[i];
        
	        surface.beginPath();

            // 陆楼卤盲碌脛脥赂脙梅露脠脭陆脌麓脭陆脥赂脙梅(脪芒脣录脢脟禄冒脩忙脧貌脡脧碌脛鹿媒鲁脤脰脨卤盲掳碌)
	        p.opacity = Math.round(p.death/p.life*100)/100;

            // 陆楼卤盲脤卯鲁盲
	        var gradient = surface.createRadialGradient(p.location.x, p.location.y, 0, p.location.x, p.location.y, p.radius);

            // 禄冒脩忙陆楼卤盲
	        gradient.addColorStop(0, "rgba("+p.r+", "+p.g+", "+p.b+", "+p.opacity+")");
	        gradient.addColorStop(0.5, "rgba("+p.r+", "+p.g+", "+p.b+", "+p.opacity+")");
	        gradient.addColorStop(1, "rgba("+p.r+", "+p.g+", "+p.b+", 0)");

	        surface.fillStyle = gradient;
	        surface.arc(p.location.x, p.location.y, p.radius, 0,Math.PI*2, true);
	        surface.fill();
	        p.death--;
	        p.radius++;
            // 禄冒脩忙脭脷x脰谩脡脧脪虏脫脨脦垄脨隆虏篓露炉
	        p.location.x += (p.speed.x);

            // 陆楼卤盲碌脛y脰谩脭脷录玫脨隆(禄冒脩忙脧貌脡脧,驴脡脪脭碌梅脮没脝盲脰碌脌麓赂脛卤盲禄冒脩忙碌脛路陆脧貌)
	        p.location.y += (p.speed.y);
			
	        //regenerate particles
	        if(p.death < 0 || p.radius < 0){
		        //a brand new particle replacing the dead one
		        particles[i] = new particle();
	        }
        }
    
        requestAnimFrame(ParticleAnimation);
    }

    ParticleAnimation();

});